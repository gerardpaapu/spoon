#!/bin/bash
set -euo pipefail
IFS=$'\n\t'

DATA_PATH="${XDG_DATA_HOME:-$HOME/.local/share}/spork"
CONFIG_PATH="${XDG_CONFIG_HOME:-$HOME/.config}/spork"
REPO_PATH="${DATA_PATH}/r/challenges"
ENV_FILE="${CONFIG_PATH}/env"

# Check our arguments
PACKAGE=${1:-}
if [[ -z "${PACKAGE}" ]]
then
  echo "usage: fork-to-cohort PACKAGE"
  echo "missing argument PACKAGE"
  exit 1
fi

echo "Sporking package ${PACKAGE}"

## Setup our local clone
echo "Repo path is ${REPO_PATH}"
if [ ! -d "${REPO_PATH}" ]
then
  echo "Cloning challenges to ${REPO_PATH}"
  mkdir -p "${REPO_PATH}"
  git clone --bare git@github.com:dev-academy-challenges/challenges "${REPO_PATH}"
else
  echo "Updating challenges"
  (cd ${REPO_PATH}; git fetch)
fi

cd ${REPO_PATH}

if [[ -f "${ENV_FILE}" ]]
then
  echo "loading config variables from ${ENV_FILE}"
  source "${ENV_FILE}"
else
  echo "no config file found at ${ENV_FILE}"
fi


TREE_ID=$(git ls-tree main "packages/${PACKAGE}" --object-only)

echo "Creating repo: ${SPORK_ORG}/${PACKAGE}"

BODY=$(printf '{ "name": "%s", "visibility": "internal" }' "${PACKAGE}")

if [[ -z "${GITHUB_ACCESS_TOKEN:-}" ]]
then
  echo "GITHUB_ACCESS_TOKEN not defined"
  exit 1
fi

echo "Creating github repo ${SPORK_ORG}/${PACKAGE}"

curl -L \
  -X POST \
  -H "Accept: application/vnd.github+json" \
  -H "Authorization: token ${GITHUB_ACCESS_TOKEN}" \
  -H "X-GitHub-Api-Version: 2022-11-28" \
  https://api.github.com/orgs/${SPORK_ORG}/repos \
  -d "${BODY}" > /dev/null

COMMIT_ID=$(git commit-tree -m "Sporked" "${TREE_ID}")

echo "Pushing to ${SPORK_ORG}/${PACKAGE}"
git push "git@github.com:${SPORK_ORG}/${PACKAGE}" "${COMMIT_ID}:refs/heads/main"
